{
	"info": {
		"_postman_id": "37a26e30-5b0e-4003-baf3-bd73c18ac044",
		"name": "eCourseSlimApi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"_postman_id": "06dca13d-ab29-4d59-b3a6-4953c01a036e",
			"name": "del user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "25efe386-9a5f-468c-84e2-70266a1cf97e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userName",
							"value": "Test user name1",
							"sessionValue": "testmyc",
							"type": "text"
						},
						{
							"key": "userMail",
							"value": "test1@test.ch",
							"sessionValue": "0",
							"type": "text"
						},
						{
							"key": "password",
							"value": "testpwd",
							"sessionValue": "testpwd",
							"type": "text"
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/user",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "351f0ff0-6f43-4b9d-a2d9-ba59b0a6ef96",
			"name": "create user 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f6eca716-3cc1-4053-904f-2143984c86e2",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							"",
							"pm.test(\"set userId variable\", function() {",
							"        var jsonData = pm.response.json();",
							"    pm.environment.set(\"userId1\",jsonData.userId)",
							"    ",
							"})",
							"/*",
							"pm.test(\"user id present\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.userId).to.be.below(10);",
							"});",
							"",
							"*/"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userName",
							"value": "Test user name1",
							"sessionValue": "testmyc",
							"type": "text"
						},
						{
							"key": "userMail",
							"value": "test1@test.ch",
							"sessionValue": "0",
							"type": "text"
						},
						{
							"key": "password",
							"value": "testpwd",
							"sessionValue": "testpwd",
							"type": "text"
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/user",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "276e6cf5-e40d-4dbb-9245-7733f90fa4ff",
			"name": "create user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bf431e5e-9ffe-41e0-8a6c-631874986ae6",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							"pm.test(\"set userId variable\", function() {",
							"        var jsonData = pm.response.json();",
							"    pm.environment.set(\"userId2\",jsonData.userId)",
							"    ",
							"})",
							"/*",
							"pm.test(\"user id present\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.userId).to.be.below(10);",
							"});",
							"",
							"*/"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userName",
							"value": "Test user name2",
							"sessionValue": "testmyc",
							"type": "text"
						},
						{
							"key": "userMail",
							"value": "test2@test.ch",
							"sessionValue": "0",
							"type": "text"
						},
						{
							"key": "password",
							"value": "testpwd",
							"sessionValue": "testpwd",
							"type": "text"
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/user",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "72ec99ff-82ee-48f2-a0f2-d519820eaf90",
			"name": "get users",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "25efe386-9a5f-468c-84e2-70266a1cf97e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userName",
							"value": "Test user name1",
							"sessionValue": "testmyc",
							"type": "text"
						},
						{
							"key": "userMail",
							"value": "test1@test.ch",
							"sessionValue": "0",
							"type": "text"
						},
						{
							"key": "password",
							"value": "testpwd",
							"sessionValue": "testpwd",
							"type": "text"
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/user",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "86e37238-9f76-4764-ac30-589d5bee50bb",
			"name": "get user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "25efe386-9a5f-468c-84e2-70266a1cf97e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userName",
							"value": "Test user name1",
							"sessionValue": "testmyc",
							"type": "text"
						},
						{
							"key": "userMail",
							"value": "test1@test.ch",
							"sessionValue": "0",
							"type": "text"
						},
						{
							"key": "password",
							"value": "testpwd",
							"sessionValue": "testpwd",
							"type": "text"
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/user/{{userId2}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"user",
						"{{userId2}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "4dd4456e-0f81-400f-857b-bf2d0a2c048a",
			"name": "get user 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "25efe386-9a5f-468c-84e2-70266a1cf97e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userName",
							"value": "Test user name1",
							"sessionValue": "testmyc",
							"type": "text"
						},
						{
							"key": "userMail",
							"value": "test1@test.ch",
							"sessionValue": "0",
							"type": "text"
						},
						{
							"key": "password",
							"value": "testpwd",
							"sessionValue": "testpwd",
							"type": "text"
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/user/{{userId1}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"user",
						"{{userId1}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "e74fec38-fbc0-4461-aa24-d727afcf165e",
			"name": "update user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bf431e5e-9ffe-41e0-8a6c-631874986ae6",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							"pm.test(\"set userId variable\", function() {",
							"        var jsonData = pm.response.json();",
							"    pm.environment.set(\"userId2\",jsonData.userId)",
							"    ",
							"})",
							"/*",
							"pm.test(\"user id present\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.userId).to.be.below(10);",
							"});",
							"",
							"*/"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userName",
							"value": "Test user name2_2",
							"sessionValue": "testmyc",
							"type": "text"
						},
						{
							"key": "userMail",
							"value": "test2_2@test.ch",
							"sessionValue": "0",
							"type": "text"
						},
						{
							"key": "password",
							"value": "testpwd",
							"sessionValue": "testpwd",
							"type": "text"
						},
						{
							"key": "language",
							"value": "DE_CH_2",
							"sessionValue": "DE_CH",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/user/{{userId2}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"user",
						"{{userId2}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "c9898e73-7bbe-4b5f-a6d7-9f902ffbd3a0",
			"name": "delete user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1d30ac36-554f-47bd-8827-59ddd4c68c7b",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"/*",
							"pm.test(\"set userId variable\", function() {",
							"        var jsonData = pm.response.json();",
							"    pm.environment.set(\"userId2\",jsonData.userId)",
							"    ",
							"})",
							"",
							"pm.test(\"user id present\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.userId).to.be.below(10);",
							"});",
							"",
							"*/"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {},
				"url": {
					"raw": "http://localhost:3000/user/{{userId2}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"user",
						"{{userId2}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "1fc620ef-e08d-4277-ad67-11e9fd273a5b",
			"name": "get course id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "25efe386-9a5f-468c-84e2-70266a1cf97e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userName",
							"value": "Test user name1",
							"sessionValue": "testmyc",
							"type": "text"
						},
						{
							"key": "userMail",
							"value": "test1@test.ch",
							"sessionValue": "0",
							"type": "text"
						},
						{
							"key": "password",
							"value": "testpwd",
							"sessionValue": "testpwd",
							"type": "text"
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/courseId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"courseId"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "3307c60d-80ac-4dc6-9205-8cf9b0215b3a",
			"name": "get courses",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "25efe386-9a5f-468c-84e2-70266a1cf97e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userName",
							"value": "Test user name1",
							"sessionValue": "testmyc",
							"type": "text"
						},
						{
							"key": "userMail",
							"value": "test1@test.ch",
							"sessionValue": "0",
							"type": "text"
						},
						{
							"key": "password",
							"value": "testpwd",
							"sessionValue": "testpwd",
							"type": "text"
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/course",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"course"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "9e95a535-5ac0-4ac5-b66b-8693475c8998",
			"name": "add course 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "479048f4-f158-4e1c-80b8-663fae6273c4",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							"pm.test(\"set courseId1 variable\", function() {",
							"        var jsonData = pm.response.json();",
							"    pm.environment.set(\"courseId1\",jsonData.courseId)",
							"    ",
							"})"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userId",
							"value": "{{userId1}}",
							"sessionValue": "{{userId1}}",
							"type": "text"
						},
						{
							"key": "courseName",
							"value": "test course1",
							"sessionValue": "test course1",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/course",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"course"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "a3662ec1-3e56-47ad-ac77-70c4c955153d",
			"name": "del course",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "25efe386-9a5f-468c-84e2-70266a1cf97e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userName",
							"value": "Test user name1",
							"sessionValue": "testmyc",
							"type": "text"
						},
						{
							"key": "userMail",
							"value": "test1@test.ch",
							"sessionValue": "0",
							"type": "text"
						},
						{
							"key": "password",
							"value": "testpwd",
							"sessionValue": "testpwd",
							"type": "text"
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/course",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"course"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "187df322-0834-4a17-97eb-7f89a5303531",
			"name": "get test course",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "25efe386-9a5f-468c-84e2-70266a1cf97e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userName",
							"value": "Test user name1",
							"sessionValue": "testmyc",
							"type": "text"
						},
						{
							"key": "userMail",
							"value": "test1@test.ch",
							"sessionValue": "0",
							"type": "text"
						},
						{
							"key": "password",
							"value": "testpwd",
							"sessionValue": "testpwd",
							"type": "text"
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/testcourse",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"testcourse"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "2127aaef-50d8-4357-ba9d-4c5267f006ab",
			"name": "get leaders",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "25efe386-9a5f-468c-84e2-70266a1cf97e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userName",
							"value": "Test user name1",
							"sessionValue": "testmyc",
							"type": "text"
						},
						{
							"key": "userMail",
							"value": "test1@test.ch",
							"sessionValue": "0",
							"type": "text"
						},
						{
							"key": "password",
							"value": "testpwd",
							"sessionValue": "testpwd",
							"type": "text"
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/leader",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"leader"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "c49bcb43-4cfd-4ac8-9179-ba2f54894b2e",
			"name": "create leader 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "db03cc7d-ac06-4a64-923a-2c6d057e4af6",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							"",
							"pm.test(\"set leaderId variable\", function() {",
							"        var jsonData = pm.response.json();",
							"    pm.environment.set(\"leaderId1\",jsonData.leaderId)",
							"    ",
							"})",
							"/*",
							"pm.test(\"user id present\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.userId).to.be.below(10);",
							"});",
							"",
							"*/"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userId",
							"value": "{{userId1}}",
							"sessionValue": "testmyc",
							"type": "text"
						},
						{
							"key": "leaderName",
							"value": "test leaderName 1",
							"sessionValue": "0",
							"type": "text"
						},
						{
							"key": "leaderSurname",
							"value": "test leaderSurname 1",
							"sessionValue": "testpwd",
							"type": "text"
						},
						{
							"key": "leaderScoutname",
							"value": "test leaderScoutname 1",
							"sessionValue": "DE_CH",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/leader",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"leader"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "2e514718-baed-41d1-b991-a94020c5cfee",
			"name": "get leader 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "25efe386-9a5f-468c-84e2-70266a1cf97e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userName",
							"value": "Test user name1",
							"sessionValue": "testmyc",
							"type": "text"
						},
						{
							"key": "userMail",
							"value": "test1@test.ch",
							"sessionValue": "0",
							"type": "text"
						},
						{
							"key": "password",
							"value": "testpwd",
							"sessionValue": "testpwd",
							"type": "text"
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/leader/{{leaderId1}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"leader",
						"{{leaderId1}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "a7d9cc3b-de6a-41f9-91f8-a301faf68aaf",
			"name": "delete leader 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "79b4b10c-c8f4-467f-86ba-22e94243a08f",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							"/*",
							"pm.test(\"set userId variable\", function() {",
							"        var jsonData = pm.response.json();",
							"    pm.environment.set(\"leaderId1\",jsonData.leaderId)",
							"    ",
							"})",
							"",
							"pm.test(\"user id present\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.userId).to.be.below(10);",
							"});",
							"",
							"*/"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userId",
							"value": "{{userId1}}",
							"sessionValue": "testmyc",
							"type": "text",
							"disabled": true
						},
						{
							"key": "leaderName",
							"value": "test leaderName 1",
							"sessionValue": "0",
							"type": "text",
							"disabled": true
						},
						{
							"key": "leaderSurname",
							"value": "test leaderSurname 1",
							"sessionValue": "testpwd",
							"type": "text",
							"disabled": true
						},
						{
							"key": "leaderScoutname",
							"value": "test leaderScoutname 1",
							"sessionValue": "DE_CH",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/leader/{{leaderId1}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"leader",
						"{{leaderId1}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "ff9e91f6-0e88-4c0c-8a3b-47b6024aa2e2",
			"name": "create leader 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e60606c7-817c-49c5-a898-8c62babef00a",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							"",
							"pm.test(\"set leaderId variable\", function() {",
							"        var jsonData = pm.response.json();",
							"    pm.environment.set(\"leaderId2\",jsonData.leaderId)",
							"    ",
							"})",
							"/*",
							"pm.test(\"user id present\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.userId).to.be.below(10);",
							"});",
							"",
							"*/"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userId",
							"value": "{{userId1}}",
							"sessionValue": "testmyc",
							"type": "text"
						},
						{
							"key": "leaderName",
							"value": "test leaderName 1",
							"sessionValue": "0",
							"type": "text"
						},
						{
							"key": "leaderSurname",
							"value": "test leaderSurname 1",
							"sessionValue": "testpwd",
							"type": "text"
						},
						{
							"key": "leaderScoutname",
							"value": "test leaderScoutname 1",
							"sessionValue": "DE_CH",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/leader",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"leader"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "0cdfd0fc-9d3b-4c0b-8dd3-a3ad29f104c5",
			"name": "get activities",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "25efe386-9a5f-468c-84e2-70266a1cf97e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userName",
							"value": "Test user name1",
							"sessionValue": "testmyc",
							"type": "text"
						},
						{
							"key": "userMail",
							"value": "test1@test.ch",
							"sessionValue": "0",
							"type": "text"
						},
						{
							"key": "password",
							"value": "testpwd",
							"sessionValue": "testpwd",
							"type": "text"
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/activity",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"activity"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "2ab876b6-833a-46ac-8df7-58b36f53073b",
			"name": "create activity 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3b76cbc0-fc98-4048-bdfc-d4d3dea70d0c",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							"",
							"pm.test(\"set activityId variable\", function() {",
							"        var jsonData = pm.response.json();",
							"    pm.environment.set(\"activityId1\",jsonData.activityId)",
							"    ",
							"})",
							"",
							"pm.test(\"activity id below 10\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.activityId).to.be.below(10);",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "activityName",
							"value": "Test activity name1",
							"sessionValue": "testmyc",
							"type": "text"
						},
						{
							"key": "activityNumber",
							"value": "12",
							"sessionValue": "0",
							"type": "text"
						},
						{
							"key": "activityDate",
							"value": "",
							"sessionValue": "testpwd",
							"type": "text"
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/activity",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"activity"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "5546e8ee-3ef4-4197-b9a1-e83bd9bf07d2",
			"name": "get activity 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "25efe386-9a5f-468c-84e2-70266a1cf97e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userName",
							"value": "Test user name1",
							"sessionValue": "testmyc",
							"type": "text"
						},
						{
							"key": "userMail",
							"value": "test1@test.ch",
							"sessionValue": "0",
							"type": "text"
						},
						{
							"key": "password",
							"value": "testpwd",
							"sessionValue": "testpwd",
							"type": "text"
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/activity/{{activityId1}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"activity",
						"{{activityId1}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "843462c6-0eb5-40f0-9503-4cdcabb838d6",
			"name": "delete activity 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "79b4b10c-c8f4-467f-86ba-22e94243a08f",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							"/*",
							"pm.test(\"set userId variable\", function() {",
							"        var jsonData = pm.response.json();",
							"    pm.environment.set(\"leaderId1\",jsonData.leaderId)",
							"    ",
							"})",
							"",
							"pm.test(\"user id present\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.userId).to.be.below(10);",
							"});",
							"",
							"*/"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userId",
							"value": "{{userId1}}",
							"sessionValue": "testmyc",
							"type": "text",
							"disabled": true
						},
						{
							"key": "leaderName",
							"value": "test leaderName 1",
							"sessionValue": "0",
							"type": "text",
							"disabled": true
						},
						{
							"key": "leaderSurname",
							"value": "test leaderSurname 1",
							"sessionValue": "testpwd",
							"type": "text",
							"disabled": true
						},
						{
							"key": "leaderScoutname",
							"value": "test leaderScoutname 1",
							"sessionValue": "DE_CH",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/activity/{{activityId1}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"activity",
						"{{activityId1}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "d40261bd-11c3-42c3-ad20-48e1549b00da",
			"name": "get participants",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "25efe386-9a5f-468c-84e2-70266a1cf97e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userName",
							"value": "Test user name1",
							"sessionValue": "testmyc",
							"type": "text"
						},
						{
							"key": "userMail",
							"value": "test1@test.ch",
							"sessionValue": "0",
							"type": "text"
						},
						{
							"key": "password",
							"value": "testpwd",
							"sessionValue": "testpwd",
							"type": "text"
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/participant",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"participant"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "24a96724-14c2-4799-84ed-f4905a814672",
			"name": "create participant 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "775c0db0-1206-4a45-b674-325da7ffc4f8",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							"",
							"pm.test(\"set participantId variable\", function() {",
							"        var jsonData = pm.response.json();",
							"    pm.environment.set(\"participantId1\",jsonData.participantId)",
							"    ",
							"})",
							"/*",
							"pm.test(\"activity id below 10\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.activityId).to.be.below(10);",
							"});",
							"",
							"*/"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "activityName",
							"value": "Test activity name1",
							"sessionValue": "testmyc",
							"type": "text",
							"disabled": true
						},
						{
							"key": "activityNumber",
							"value": "12",
							"sessionValue": "0",
							"type": "text",
							"disabled": true
						},
						{
							"key": "activityDate",
							"value": "",
							"sessionValue": "testpwd",
							"type": "text",
							"disabled": true
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text",
							"disabled": true
						},
						{
							"key": "participantName",
							"value": "est",
							"sessionValue": "est",
							"type": "text"
						},
						{
							"key": "participantSurname",
							"value": "sdf",
							"sessionValue": "sdf",
							"type": "text"
						},
						{
							"key": "participantScoutname",
							"value": "sdf",
							"sessionValue": "sdf",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/participant",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"participant"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "25f59876-5088-4899-a14f-a7c32063e0cc",
			"name": "get participant1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "25efe386-9a5f-468c-84e2-70266a1cf97e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userName",
							"value": "Test user name1",
							"sessionValue": "testmyc",
							"type": "text"
						},
						{
							"key": "userMail",
							"value": "test1@test.ch",
							"sessionValue": "0",
							"type": "text"
						},
						{
							"key": "password",
							"value": "testpwd",
							"sessionValue": "testpwd",
							"type": "text"
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/participant/{{participantId1}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"participant",
						"{{participantId1}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "b9df67ea-e7d9-4a23-b842-5b50f42e6122",
			"name": "delete participant1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "79b4b10c-c8f4-467f-86ba-22e94243a08f",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							"/*",
							"pm.test(\"set userId variable\", function() {",
							"        var jsonData = pm.response.json();",
							"    pm.environment.set(\"leaderId1\",jsonData.leaderId)",
							"    ",
							"})",
							"",
							"pm.test(\"user id present\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.userId).to.be.below(10);",
							"});",
							"",
							"*/"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userId",
							"value": "{{userId1}}",
							"sessionValue": "testmyc",
							"type": "text",
							"disabled": true
						},
						{
							"key": "leaderName",
							"value": "test leaderName 1",
							"sessionValue": "0",
							"type": "text",
							"disabled": true
						},
						{
							"key": "leaderSurname",
							"value": "test leaderSurname 1",
							"sessionValue": "testpwd",
							"type": "text",
							"disabled": true
						},
						{
							"key": "leaderScoutname",
							"value": "test leaderScoutname 1",
							"sessionValue": "DE_CH",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/participant/{{participantId1}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"participant",
						"{{participantId1}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "4daf65b6-1da5-4f17-9428-9045ff92b79b",
			"name": "create participant 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "719db3b0-0cbf-433c-9661-d601b355d15b",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							"",
							"pm.test(\"set participantId variable\", function() {",
							"        var jsonData = pm.response.json();",
							"    pm.environment.set(\"participantId2\",jsonData.participantId)",
							"    ",
							"})",
							"/*",
							"pm.test(\"activity id below 10\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.activityId).to.be.below(10);",
							"});",
							"",
							"*/"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "activityName",
							"value": "Test activity name1",
							"sessionValue": "testmyc",
							"type": "text",
							"disabled": true
						},
						{
							"key": "activityNumber",
							"value": "12",
							"sessionValue": "0",
							"type": "text",
							"disabled": true
						},
						{
							"key": "activityDate",
							"value": "",
							"sessionValue": "testpwd",
							"type": "text",
							"disabled": true
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text",
							"disabled": true
						},
						{
							"key": "participantName",
							"value": "est",
							"sessionValue": "est",
							"type": "text"
						},
						{
							"key": "participantSurname",
							"value": "sdf",
							"sessionValue": "sdf",
							"type": "text"
						},
						{
							"key": "participantScoutname",
							"value": "sdf",
							"sessionValue": "sdf",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/participant",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"participant"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "69bd5578-4725-4a86-9a4a-651d7bf7a7de",
			"name": "get observations",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "25efe386-9a5f-468c-84e2-70266a1cf97e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userName",
							"value": "Test user name1",
							"sessionValue": "testmyc",
							"type": "text"
						},
						{
							"key": "userMail",
							"value": "test1@test.ch",
							"sessionValue": "0",
							"type": "text"
						},
						{
							"key": "password",
							"value": "testpwd",
							"sessionValue": "testpwd",
							"type": "text"
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/observation",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"observation"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "572b8e8d-37c9-4487-98ad-b4d99c91e87f",
			"name": "create observation 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "af1df05a-76f0-421b-8d67-b3f6820a85f7",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							"",
							"pm.test(\"set observationId variable\", function() {",
							"        var jsonData = pm.response.json();",
							"    pm.environment.set(\"observationId1\",jsonData.observationId)",
							"    ",
							"})",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "activityName",
							"value": "Test activity name1",
							"sessionValue": "testmyc",
							"type": "text",
							"disabled": true
						},
						{
							"key": "activityNumber",
							"value": "12",
							"sessionValue": "0",
							"type": "text",
							"disabled": true
						},
						{
							"key": "activityDate",
							"value": "",
							"sessionValue": "testpwd",
							"type": "text",
							"disabled": true
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text",
							"disabled": true
						},
						{
							"key": "observationText",
							"value": "test",
							"sessionValue": "test",
							"type": "text"
						},
						{
							"key": "leaderId",
							"value": "{{leaderId2}}",
							"sessionValue": "{{leaderId1}}",
							"type": "text"
						},
						{
							"key": "participantId",
							"value": "{{participantId2}}",
							"sessionValue": "participantId1}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/observation",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"observation"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "41cfa5ef-dfc2-47fb-abfc-9c4266b592b5",
			"name": "get observation 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "25efe386-9a5f-468c-84e2-70266a1cf97e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userName",
							"value": "Test user name1",
							"sessionValue": "testmyc",
							"type": "text"
						},
						{
							"key": "userMail",
							"value": "test1@test.ch",
							"sessionValue": "0",
							"type": "text"
						},
						{
							"key": "password",
							"value": "testpwd",
							"sessionValue": "testpwd",
							"type": "text"
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/observation/{{observationId1}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"observation",
						"{{observationId1}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "138e6865-b967-47dc-a98d-47284b1279dc",
			"name": "delete observation 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "79b4b10c-c8f4-467f-86ba-22e94243a08f",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							"/*",
							"pm.test(\"set userId variable\", function() {",
							"        var jsonData = pm.response.json();",
							"    pm.environment.set(\"leaderId1\",jsonData.leaderId)",
							"    ",
							"})",
							"",
							"pm.test(\"user id present\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.userId).to.be.below(10);",
							"});",
							"",
							"*/"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userId",
							"value": "{{userId1}}",
							"sessionValue": "testmyc",
							"type": "text",
							"disabled": true
						},
						{
							"key": "leaderName",
							"value": "test leaderName 1",
							"sessionValue": "0",
							"type": "text",
							"disabled": true
						},
						{
							"key": "leaderSurname",
							"value": "test leaderSurname 1",
							"sessionValue": "testpwd",
							"type": "text",
							"disabled": true
						},
						{
							"key": "leaderScoutname",
							"value": "test leaderScoutname 1",
							"sessionValue": "DE_CH",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/observation/{{observationId1}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"observation",
						"{{observationId1}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "1ba4331e-197e-4e09-bf9a-297ec1dfdf38",
			"name": "get observationTags",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "25efe386-9a5f-468c-84e2-70266a1cf97e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userName",
							"value": "Test user name1",
							"sessionValue": "testmyc",
							"type": "text"
						},
						{
							"key": "userMail",
							"value": "test1@test.ch",
							"sessionValue": "0",
							"type": "text"
						},
						{
							"key": "password",
							"value": "testpwd",
							"sessionValue": "testpwd",
							"type": "text"
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/observationTag",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"observationTag"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "f93af847-13c0-485d-b91a-81b79ea017a0",
			"name": "create observationTag 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2095a9b0-96af-4cc9-b0be-bb30eba100d8",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							"",
							"pm.test(\"set observationId variable\", function() {",
							"        var jsonData = pm.response.json();",
							"    pm.environment.set(\"observationTagId1\",jsonData.observationTagId)",
							"    ",
							"})",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "activityName",
							"value": "Test activity name1",
							"sessionValue": "testmyc",
							"type": "text",
							"disabled": true
						},
						{
							"key": "activityNumber",
							"value": "12",
							"sessionValue": "0",
							"type": "text",
							"disabled": true
						},
						{
							"key": "activityDate",
							"value": "",
							"sessionValue": "testpwd",
							"type": "text",
							"disabled": true
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text",
							"disabled": true
						},
						{
							"key": "observationText",
							"value": "test",
							"sessionValue": "test",
							"type": "text",
							"disabled": true
						},
						{
							"key": "leaderId",
							"value": "{{leaderId2}}",
							"sessionValue": "{{leaderId1}}",
							"type": "text",
							"disabled": true
						},
						{
							"key": "participantId",
							"value": "{{participantId2}}",
							"sessionValue": "participantId1}}",
							"type": "text",
							"disabled": true
						},
						{
							"key": "observationTagName",
							"value": "testname",
							"sessionValue": "testname",
							"type": "text"
						},
						{
							"key": "parentObservationTagId",
							"value": "1",
							"sessionValue": "1",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/observationTag",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"observationTag"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "833c2404-6432-4dc7-a330-294c27972ebc",
			"name": "get observationTag 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "25efe386-9a5f-468c-84e2-70266a1cf97e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userName",
							"value": "Test user name1",
							"sessionValue": "testmyc",
							"type": "text"
						},
						{
							"key": "userMail",
							"value": "test1@test.ch",
							"sessionValue": "0",
							"type": "text"
						},
						{
							"key": "password",
							"value": "testpwd",
							"sessionValue": "testpwd",
							"type": "text"
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/observationTag/{{observationTagId1}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"observationTag",
						"{{observationTagId1}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "1a2c2c5f-6ea9-4c64-80d1-8584bc003029",
			"name": "delete observationTag 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "79b4b10c-c8f4-467f-86ba-22e94243a08f",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							"/*",
							"pm.test(\"set userId variable\", function() {",
							"        var jsonData = pm.response.json();",
							"    pm.environment.set(\"leaderId1\",jsonData.leaderId)",
							"    ",
							"})",
							"",
							"pm.test(\"user id present\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.userId).to.be.below(10);",
							"});",
							"",
							"*/"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userId",
							"value": "{{userId1}}",
							"sessionValue": "testmyc",
							"type": "text",
							"disabled": true
						},
						{
							"key": "leaderName",
							"value": "test leaderName 1",
							"sessionValue": "0",
							"type": "text",
							"disabled": true
						},
						{
							"key": "leaderSurname",
							"value": "test leaderSurname 1",
							"sessionValue": "testpwd",
							"type": "text",
							"disabled": true
						},
						{
							"key": "leaderScoutname",
							"value": "test leaderScoutname 1",
							"sessionValue": "DE_CH",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/observationTag/{{observationTagId1}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"observationTag",
						"{{observationTagId1}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "1ee58618-db4d-4304-8a76-8a25d4795264",
			"name": "get participantTags",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "25efe386-9a5f-468c-84e2-70266a1cf97e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userName",
							"value": "Test user name1",
							"sessionValue": "testmyc",
							"type": "text"
						},
						{
							"key": "userMail",
							"value": "test1@test.ch",
							"sessionValue": "0",
							"type": "text"
						},
						{
							"key": "password",
							"value": "testpwd",
							"sessionValue": "testpwd",
							"type": "text"
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/participantTag",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"participantTag"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "9eab134b-fd21-4356-9c3b-84bd5c9f09b4",
			"name": "create participantTag 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b5bdd5ca-a285-4bbb-b3c4-3657d7653ca8",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							"",
							"pm.test(\"set observationId variable\", function() {",
							"        var jsonData = pm.response.json();",
							"    pm.environment.set(\"participantTagId1\",jsonData.participantTagId)",
							"    ",
							"})",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "activityName",
							"value": "Test activity name1",
							"sessionValue": "testmyc",
							"type": "text",
							"disabled": true
						},
						{
							"key": "activityNumber",
							"value": "12",
							"sessionValue": "0",
							"type": "text",
							"disabled": true
						},
						{
							"key": "activityDate",
							"value": "",
							"sessionValue": "testpwd",
							"type": "text",
							"disabled": true
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text",
							"disabled": true
						},
						{
							"key": "observationText",
							"value": "test",
							"sessionValue": "test",
							"type": "text",
							"disabled": true
						},
						{
							"key": "leaderId",
							"value": "{{leaderId2}}",
							"sessionValue": "{{leaderId1}}",
							"type": "text",
							"disabled": true
						},
						{
							"key": "participantId",
							"value": "{{participantId2}}",
							"sessionValue": "participantId1}}",
							"type": "text",
							"disabled": true
						},
						{
							"key": "participantTagName",
							"value": "testname",
							"sessionValue": "testname",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/participantTag",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"participantTag"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "42157661-d9d9-45ac-84ee-3f0f8565b2bb",
			"name": "get participantTag 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "25efe386-9a5f-468c-84e2-70266a1cf97e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userName",
							"value": "Test user name1",
							"sessionValue": "testmyc",
							"type": "text"
						},
						{
							"key": "userMail",
							"value": "test1@test.ch",
							"sessionValue": "0",
							"type": "text"
						},
						{
							"key": "password",
							"value": "testpwd",
							"sessionValue": "testpwd",
							"type": "text"
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/participantTag/{{participantTagId1}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"participantTag",
						"{{participantTagId1}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "37f4f34b-398a-4b60-a69c-9667b3d0df8a",
			"name": "delete participantTag 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "79b4b10c-c8f4-467f-86ba-22e94243a08f",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							"/*",
							"pm.test(\"set userId variable\", function() {",
							"        var jsonData = pm.response.json();",
							"    pm.environment.set(\"leaderId1\",jsonData.leaderId)",
							"    ",
							"})",
							"",
							"pm.test(\"user id present\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.userId).to.be.below(10);",
							"});",
							"",
							"*/"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userId",
							"value": "{{userId1}}",
							"sessionValue": "testmyc",
							"type": "text",
							"disabled": true
						},
						{
							"key": "leaderName",
							"value": "test leaderName 1",
							"sessionValue": "0",
							"type": "text",
							"disabled": true
						},
						{
							"key": "leaderSurname",
							"value": "test leaderSurname 1",
							"sessionValue": "testpwd",
							"type": "text",
							"disabled": true
						},
						{
							"key": "leaderScoutname",
							"value": "test leaderScoutname 1",
							"sessionValue": "DE_CH",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/participantTag/{{participantTagId1}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"participantTag",
						"{{participantTagId1}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "f51dadb7-9c9e-419e-a45a-a49c05b76e28",
			"name": "get codeMappings",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "25efe386-9a5f-468c-84e2-70266a1cf97e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userName",
							"value": "Test user name1",
							"sessionValue": "testmyc",
							"type": "text"
						},
						{
							"key": "userMail",
							"value": "test1@test.ch",
							"sessionValue": "0",
							"type": "text"
						},
						{
							"key": "password",
							"value": "testpwd",
							"sessionValue": "testpwd",
							"type": "text"
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/codeMapping",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"codeMapping"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "0c8ffccc-37c6-4385-96a8-43937804cd57",
			"name": "create codeMapping 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3426fe5b-7633-456a-bda8-3a0518d153b0",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							"",
							"pm.test(\"set codeMappingId variable\", function() {",
							"        var jsonData = pm.response.json();",
							"    pm.environment.set(\"codeMappingId1\",jsonData.codeMappingId)",
							"    ",
							"})",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "activityName",
							"value": "Test activity name1",
							"sessionValue": "testmyc",
							"type": "text",
							"disabled": true
						},
						{
							"key": "activityNumber",
							"value": "12",
							"sessionValue": "0",
							"type": "text",
							"disabled": true
						},
						{
							"key": "activityDate",
							"value": "",
							"sessionValue": "testpwd",
							"type": "text",
							"disabled": true
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text",
							"disabled": true
						},
						{
							"key": "observationText",
							"value": "test",
							"sessionValue": "test",
							"type": "text",
							"disabled": true
						},
						{
							"key": "leaderId",
							"value": "{{leaderId2}}",
							"sessionValue": "{{leaderId1}}",
							"type": "text",
							"disabled": true
						},
						{
							"key": "participantId",
							"value": "{{participantId2}}",
							"sessionValue": "participantId1}}",
							"type": "text",
							"disabled": true
						},
						{
							"key": "codeMappingName",
							"value": "testmapping",
							"sessionValue": "testmapping",
							"type": "text"
						},
						{
							"key": "Key1_alpha",
							"value": "keytest1",
							"sessionValue": "key",
							"type": "text"
						},
						{
							"key": "Value1",
							"value": "value",
							"sessionValue": "value",
							"type": "text"
						},
						{
							"key": "Key1_num",
							"value": "3",
							"sessionValue": "3",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/codeMapping",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"codeMapping"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "6a0d3567-f475-488f-aa8c-6c833c296e37",
			"name": "get codeMapping 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "25efe386-9a5f-468c-84e2-70266a1cf97e",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userName",
							"value": "Test user name1",
							"sessionValue": "testmyc",
							"type": "text"
						},
						{
							"key": "userMail",
							"value": "test1@test.ch",
							"sessionValue": "0",
							"type": "text"
						},
						{
							"key": "password",
							"value": "testpwd",
							"sessionValue": "testpwd",
							"type": "text"
						},
						{
							"key": "language",
							"value": "DE_CH",
							"sessionValue": "DE_CH",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/codeMapping/{{codeMappingId1}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"codeMapping",
						"{{codeMappingId1}}"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "93d9a1c8-d50b-443f-8326-f52030a4766d",
			"name": "delete codeMapping 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "79b4b10c-c8f4-467f-86ba-22e94243a08f",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"response is ok\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// example using response assertions",
							"pm.test(\"response should be okay to process\", function () { ",
							"    pm.response.to.not.be.error; ",
							"    pm.response.to.have.jsonBody(\"\"); ",
							"    pm.response.to.not.have.jsonBody(\"error\"); ",
							"});",
							"",
							"/*",
							"pm.test(\"set userId variable\", function() {",
							"        var jsonData = pm.response.json();",
							"    pm.environment.set(\"leaderId1\",jsonData.leaderId)",
							"    ",
							"})",
							"",
							"pm.test(\"user id present\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.userId).to.be.below(10);",
							"});",
							"",
							"*/"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "courseName",
						"value": "testmyc",
						"disabled": true
					},
					{
						"key": "ownerUserId",
						"value": "0",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "userId",
							"value": "{{userId1}}",
							"sessionValue": "testmyc",
							"type": "text",
							"disabled": true
						},
						{
							"key": "leaderName",
							"value": "test leaderName 1",
							"sessionValue": "0",
							"type": "text",
							"disabled": true
						},
						{
							"key": "leaderSurname",
							"value": "test leaderSurname 1",
							"sessionValue": "testpwd",
							"type": "text",
							"disabled": true
						},
						{
							"key": "leaderScoutname",
							"value": "test leaderScoutname 1",
							"sessionValue": "DE_CH",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/codeMapping/{{codeMappingId1}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"codeMapping",
						"{{codeMappingId1}}"
					]
				}
			},
			"response": []
		}
	]
}